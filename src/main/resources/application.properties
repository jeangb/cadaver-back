spring.datasource.url= jdbc:mysql://localhost:3306/${YOUR_DB_NAME}?allowPublicKeyRetrieval=true&useSSL=true
spring.datasource.username=${YOUR_DB_USERNAME}
spring.datasource.password=${YOUR_DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#Mail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${YOUR_MAIL_USERNAME}
spring.mail.password=${YOUR_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
#Security
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://securetoken.google.com/${FIREBASE_PROJECT_NAME}
#server
server.port=8080
url.prod=https://cadavreexquis.fr/
url.dev=http://localhost:4200/

#SSL properties
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=JKS
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore/cadex_com.jks
# The password used to generate the certificate
server.ssl.key-store-password=${YOUR_SSL_KEYSTORE_PASSWORD}
# The alias mapped to the certificate
server.ssl.key-alias=cadex
server.ssl.enabled=true

#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration
#spring.security.enabled=false
#management.security.enabled=false
#security.basic.enabled=false

spring.main.allow-circular-references=true

